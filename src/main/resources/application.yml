spring:
  profiles:
    active: local
  config:
    import: "optional:configserver:http://config:8888"
  cloud:
    config:
      name: fit-group-service
      profile: local
  application:
    name: fit-group-service
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: 8080
  shutdown: graceful

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

---
spring:
  config:
    activate:
      on-profile: main
    import: "optional:configserver:http://config:8888"
  cloud:
    config:
      name: fit-group-service
      profile: main
  application:
    name: fit-group-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://223.130.156.217:3306/fitGroup?validationQuery="select 1"
    username: fitGroup
    password: fitGroup
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  kafka:
    consumer:
      bootstrap-servers: kafka-1:9092
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: kafka-1:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: 8080
  shutdown: graceful

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${server.port}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka-server:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: refresh
